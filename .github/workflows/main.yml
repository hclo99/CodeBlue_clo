# Workflow title
# 명시하지 않는 경우 파일의 경로가 타이틀이 된다.
name: CodeBLUE-CI-CD

# main.yml에서 사용할 환경변수
env:
  DOCKER_IMAGE: ghcr.io/siwon-kim/codeblue-image
  DOCKER_CONTAINER: codeblue-container

# 이벤트
# main 브랜치에 push나 pull request가 일어난우경우
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# 이벤트가 일어나면 해야할 작업들을 명시
# 테스트, 빌드, 배포 단위로 명시
# 각각의 job은 runner라는 컨테이너에서 개별적으로 실행
jobs:
  # test code with Jest
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
      - name: Setup node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
      - name: Load env file
        run: |
          touch .env
          echo "MODE=${{ secrets.MODE }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "RDS_DB_NAME=${{ secrets.RDS_DB_NAME }}" >> .env
          echo "RDS_HOSTNAME=${{ secrets.RDS_HOSTNAME }}" >> .env
          echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}" >> .env
          echo "RDS_PORT=${{ secrets.RDS_PORT }}" >> .env
          echo "RDS_USERNAME=${{ secrets.RDS_USERNAME }}" >> .env
          echo "KAKAOMAP_REST_API_KEY=${{ secrets.KAKAOMAP_REST_API_KEY }}" >> .env
      - name: Install dependencies
        run: npm install
      - run: npm run test
  # Docker image build
  build:
    # build가 시작되려면 test를 완료해야함
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            image=moby/buildkit:v0.10.6
      - name: login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CODEBLUE_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  # ec2 환경에 배포
  deploy:
    # deploy가 시작되려면 build를 완료해야함
    needs: build
    # ec2에 설치한 Runner로 job 실행
    runs-on: [self-hosted, label-codeblue]
    # Github container registry 로그인
    steps:
      - name: Login to ghcr
        uses: actions/checkout@v3
      - name: Setup docker build
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CODEBLUE_TOKEN }}
      - name: Run docker
        run: |
          touch .env
          echo "MODE=${{ secrets.MODE }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "RDS_DB_NAME=${{ secrets.RDS_DB_NAME }}" >> .env
          echo "RDS_HOSTNAME=${{ secrets.RDS_HOSTNAME }}" >> .env
          echo "RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}" >> .env
          echo "RDS_PORT=${{ secrets.RDS_PORT }}" >> .env
          echo "RDS_USERNAME=${{ secrets.RDS_USERNAME }}" >> .env
          echo "KAKAOMAP_REST_API_KEY=${{ secrets.KAKAOMAP_REST_API_KEY }}" >> .env
          docker stop ${{ env.DOCKER_CONTAINER }} && docker rm ${{ env.DOCKER_CONTAINER }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
          docker run --env-file ./.env -d -p 80:3000 --name ${{ env.DOCKER_CONTAINER }} --restart always ${{ env.DOCKER_IMAGE }}:latest
